schemaVersion: 2.2.0
metadata:
  name: eclipse-che-postgres
components:
  - name: dev-container
    container:
      image: 'registry.redhat.io/devspaces/udi-rhel8:3.15'
      memoryLimit: 1Gi
      memoryRequest: 100Mi
      cpuLimit: '3'
      cpuRequest: '30m'
      mountSources: true
      env:
        - name: KUBEDOCK_ENABLED
          value: 'true'
      endpoints:
        - name: http
          targetPort: 8080
  - name: postgres
    container:
      image: registry.redhat.io/rhel8/postgresql-13
      memoryLimit: 1Gi
      memoryRequest: 100i
      cpuRequest: 30m
      mountSources: true
      env:
        - name: POSTGRESQL_USER
          value: devuser
        - name: POSTGRESQL_PASSWORD
          value: devpassword
        - name: POSTGRESQL_DATABASE
          value: devdb
      volumeMounts:
        - name: postgres-data
          path: /var/lib/pgsql/data
      endpoints:
        - name: postgres
          targetPort: 5432
          exposure: internal
  - name: postgres-data
    volume: {}
commands:
  - id: create-table
    exec:
      label: Create Postgres Table    
      component: postgres
      commandLine: bash -c \"psql -c \"CREATE TABLE demo_table (id SERIAL PRIMARY KEY, my_text VARCHAR);\"\"
      workingDir: '${PROJECT_SOURCE}' 
  - id: check-postgres-status
    exec:
      label: Check Postgres Status
      component: postgres
      commandLine: bash -c "pg_isready -U devuser -d devdb"
      workingDir: '${PROJECT_SOURCE}'
  - id: install-dep-packages
    exec:
      label: Install packages in requirements.txt
      component: dev-container
      commandLine: pip install -r requirements.txt
      workingDir: '${PROJECT_SOURCE}'
  - id: build-image
    exec:
      label: Build container image from Dockerfile
      component: dev-container
      commandLine: "podman build -t registry.dst.tk-inline.net/s224839/demobuilt:latest --label \"quay.expires-after=2w\" -f Dockerfile && podman push registry.dst.tk-inline.net/s224839/demobuilt:latest"
      workingDir: '${PROJECT_SOURCE}'       
  - id: run-app
    exec:
      label: Run the app
      component: dev-container
      commandLine: uvicorn app:app --reload
      workingDir: '${PROJECT_SOURCE}' 
